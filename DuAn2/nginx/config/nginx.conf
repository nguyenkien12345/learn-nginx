# Lưu ý luôn luôn kết thúc cuối câu với dấu ; 
# Đoạn từ dòng 2 đến dòng 11 thường dùng để định nghĩa cái thằng nginx xử lý công việc load balancing
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;   
}

# http: Định nghĩa 1 cái web server (http,https là hình thức giao tiếp)
http { 
    # Mime types: Nó sẽ giúp cho máy tính của chúng ta hiểu được là chúng ta đang truy cập file với cái kiểu dữ liệu là như thế nào
    # /etc/nginx/mime.types: Nơi định nghĩa tất cả các định dạng file mime.types thường gặp
    include       /etc/nginx/mime.types;

    server {
        # Luôn luôn (bắt buộc) sử dụng địa chỉ ip bởi vì mỗi 1 địa chỉ ip nó sẽ xác định 1 cái server duy nhất mà thôi
        # Máy tính không hiểu tên miền mà phải thông qua 1 cái dns để mapping domain với ip
        # listen: Chạy con webserver ở port 80
        listen      80;
        listen [::]:80;

        # Nếu gặp lỗi 404 thì ta sẽ chạy vào location   /404.html để đi tìm file 404.html và hiển thị ra {}
        # error_page  404         /404.html;

        # location /404.html {
        #     root /usr/share/nginx/html;
        # }

        # Tùy với mỗi 1 đường link tương ứng mà ta sẽ cần chỉ cho nginx biết là đọc tài liệu từ đâu, đọc cái gì
        # Setup route cho fontend
        location / {
            root /usr/share/nginx/html;
            index index.html index.html;
            # Cứ khác đường dẫn / (vd: /home, /about, /contact, ... thì chúng ta sẽ gọi vào thằng react coi nó có xử lý được những cái request có route như thế không ?)
            try_files $uri /index.html;
        }

        # Setup route cho backend (route cứ bắt đầu bằng api là chạy vào đây xử lý)
        location /api {
            # nginx sẽ gọi đến http://localhost:8000 (forward) sau đó trả về phản hồi (Giấu đi đường link backend thật sự)
            # Ở đây ta phải thay http://localhost:8000 thành http://host.docker.internal:8000 vì nếu để là localhost nó sẽ không thể
            # gọi được đến database bên ngoài máy tính local của chúng ta nên ta phải thay localhost thành host.docker.internal thì mới
            # có thể gọi đến database local của chúng ta được
            proxy_pass http://host.docker.internal:8000;
        }
    }
}

# Thường con nginx của chúng ta nó chỉ biết mỗi cái đường dẫn / mà thôi. Nên lúc nào chúng ta cũng phải qua con nginx trước rồi
# mới đến con react. Khi mà chạy vào cái đường dẫn / này xong thì lúc này các đường
# dẫn như /home, /about, /contact, ... sẽ do react handle điều hướng xử lý. Chúng ta đang gặp khó khăn ở chỗ là mỗi lần chúng ta
# f5 reload lại trang web thì thì lúc này browser của chúng ta sẽ đi hỏi con nginx là ứng với đường link này (vd: /home, /about, /contact)
# nó phải làm gì. Anh nginx của chúng ta mới đi đọc trong location của nó thì không thấy có đường dẫn/location nào tương ứng cả thế
# là trả ra 404 luôn mà không hề nói cho thằng react biết là có 1 cái request gửi tới.
# Chúng ta phải qua được nginx thì mới đến được react
